/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import app.entities.Jobs;
import app.entities.Users;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.swing.JOptionPane;

/**
 *
 * @author JB
 */
public class UserDialog extends javax.swing.JDialog {
    private EntityManagerFactory factory;
    private Users selectedUser = null;
    private boolean changed = false;
    
    
    /**
     * Creates new form UserDialog not used in application, only by designer
     */
    public UserDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /**
     * Use this constructor
     * @param parent
     * @param modal
     * @param factory
     * @param user null if add dialog otherwise the user to be updated
     */
    public UserDialog(java.awt.Frame parent, boolean modal, EntityManagerFactory factory, Users user) {
        this(parent, modal);
        this.factory = factory;
        jobsSelector1.initialize(factory, user);
        selectedUser = user;
        if (user != null) {
            selectUser();
        }else {
            jButton1.setVisible(false);
        }
    }
    
    /**
     * @return true if data in db has changed false otherwise.
     */
    public boolean isDbChanged() {
        return changed;
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userDetails = new javax.swing.JPanel();
        nameEdit = new javax.swing.JTextField();
        surnameEdit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginEdit = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jobsSelector1 = new app.JobsSelector();
        submitForm = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        userDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Name:");

        jLabel2.setText("Surname:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Add new User");

        jLabel4.setText("Login:");

        jLabel5.setText("Jobs:");

        submitForm.setText("Add user");
        submitForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitFormMouseClicked(evt);
            }
        });

        jButton1.setText("Delete user");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userDetailsLayout = new javax.swing.GroupLayout(userDetails);
        userDetails.setLayout(userDetailsLayout);
        userDetailsLayout.setHorizontalGroup(
            userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userDetailsLayout.createSequentialGroup()
                        .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(surnameEdit)
                            .addComponent(nameEdit)
                            .addComponent(jobsSelector1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userDetailsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userDetailsLayout.createSequentialGroup()
                                .addComponent(submitForm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))))
                .addContainerGap())
        );
        userDetailsLayout.setVerticalGroup(
            userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(userDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(28, 28, 28))
                    .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(surnameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobsSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitForm)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitFormMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitFormMouseClicked
        if (sendForm()) {
            changed = true;
            dispose();
        }
    }//GEN-LAST:event_submitFormMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this user?", 
                "Delete user",JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            if (deleteUser()) {
                changed = true;
                dispose(); 
            }
        }    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showError(String title, String text) {
        JOptionPane.showMessageDialog(null, text, title, JOptionPane.ERROR_MESSAGE);
    }
    
    private void selectUser() {
        jLabel3.setText("Update user: " + selectedUser.getLogin());
        loginEdit.setText( selectedUser.getLogin());
        nameEdit.setText( selectedUser.getName());
        surnameEdit.setText(selectedUser.getSurname());
        submitForm.setText("Update user");
    }
    
    private boolean sendForm() {
        if (!validateForm()) {
                return false;
        }
        EntityManager em = factory.createEntityManager();
        EntityTransaction tx = null;
        boolean ret = true;
        try {
            tx = em.getTransaction();
            tx.begin();
            List<Jobs> jobs = jobsSelector1.getSelectedJobs();
            if (selectedUser == null) {
                addUser(em, jobs);
            } else {
                updateUser(em,jobs);
            }
            tx.commit();
        } catch (Exception e) {
            if (tx != null && tx.isActive()){ tx.rollback(); ret = false;}
        } finally {
            em.close();
            return ret;
        }    
    }
    
    private void addUser(EntityManager em, List<Jobs> jobs) {
        Users user = new Users();
        user.setPass("fakePass");
        user.setSalt("fakeSalt");
        user.setLogin(loginEdit.getText());
        user.setName(nameEdit.getText());
        user.setSurname(surnameEdit.getText());
        user.setJobsCollection(new ArrayList<Jobs>());
        for (Jobs j : jobs) {
            j = em.merge(j);
            user.getJobsCollection().add(j);
        }
        em.persist(user);
    }
    
    private void updateUser(EntityManager em, List<Jobs> jobs) {
        Users user = selectedUser;
        user.setLogin(loginEdit.getText());
        user.setName(nameEdit.getText());
        user.setSurname(surnameEdit.getText());
        user.setJobsCollection(new ArrayList<Jobs>());
        for (Jobs j : jobs) {
            j = em.merge(j);
            user.getJobsCollection().add(j);  
        }
        em.merge(user);
    }
    
    private boolean deleteUser() {
        EntityManager em = factory.createEntityManager();
        EntityTransaction tx = null;
        boolean ret = true;
        try {
            tx = em.getTransaction();
            tx.begin();
            Users ref = em.getReference(Users.class, selectedUser.getUserId());
            em.remove(ref);
            tx.commit();
        } catch (Exception e) {
            if (tx != null && tx.isActive()){ tx.rollback(); ret = false;}
        } finally {
            em.close();
            return ret;
        }   
    }
        
    
    private boolean validateForm() {
        String title;
        if (selectedUser == null) {
            title = "Could not add new user";
        }else {
            title = "Could not update user";
        }
        if (nameEdit.getText().isEmpty()) {
            showError(title, "Name can not be left empty!");
            return false;
        }
        if (surnameEdit.getText().isEmpty()) {
            showError(title, "Surname can not be left empty!");
            return false;
        }
        if (loginEdit.getText().isEmpty()) {
            showError(title, "Login can not be left empty!");
            return false;
        }
        return true;
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private app.JobsSelector jobsSelector1;
    private javax.swing.JTextField loginEdit;
    private javax.swing.JTextField nameEdit;
    private javax.swing.JButton submitForm;
    private javax.swing.JTextField surnameEdit;
    private javax.swing.JPanel userDetails;
    // End of variables declaration//GEN-END:variables
}
