/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import app.entities.Jobs;
import app.entities.Users;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JB
 */
public final class TablePanel extends javax.swing.JPanel {
    private EntityManagerFactory factory;
    private List<Users> loadedUsers;
    
    
    /**
     * Creates new form TablePanel
     */
    public TablePanel() {
        initComponents();
    }
    
    
    /**
     * Need this because constructor can't have any arguments.
     * @param factory 
     */
    public void initialize(EntityManagerFactory factory) {
        this.factory = factory;
        jobsSelector1.initialize(factory);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        userDetails = new javax.swing.JPanel();
        nameEdit = new javax.swing.JTextField();
        surnameEdit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginEdit = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jobsSelector1 = new app.JobsSelector();
        submitForm = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "login", "name", "surname", "positions"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(usersTable);

        userDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Name:");

        jLabel2.setText("Surname:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Add new User");

        jLabel4.setText("Login:");

        jLabel5.setText("Jobs:");

        submitForm.setText("Add user");
        submitForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitFormMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout userDetailsLayout = new javax.swing.GroupLayout(userDetails);
        userDetails.setLayout(userDetailsLayout);
        userDetailsLayout.setHorizontalGroup(
            userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailsLayout.createSequentialGroup()
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userDetailsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(userDetailsLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userDetailsLayout.createSequentialGroup()
                                .addComponent(submitForm)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(userDetailsLayout.createSequentialGroup()
                                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(loginEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(surnameEdit)
                                    .addComponent(nameEdit)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userDetailsLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jobsSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        userDetailsLayout.setVerticalGroup(
            userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(4, 4, 4)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jobsSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(submitForm))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitFormMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitFormMouseClicked
        if (nameEdit.getText().isEmpty()) {
            showError("Could not add new user", "Name can not be left empty!");
            return;
        }
        if (surnameEdit.getText().isEmpty()) {
            showError("Could not add new user", "Surname can not be left empty!");
            return;
        }
        if (loginEdit.getText().isEmpty()) {
            showError("Could not add new user", "Login can not be left empty!");
            return;
        }
        EntityManager em = factory.createEntityManager();
        EntityTransaction tx = null;
        try {
            tx = em.getTransaction();
            tx.begin();
            List<Jobs> jobs = jobsSelector1.getSelectedJobs();
            Users newUser = new Users();
            newUser.setPass("fakePass");
            newUser.setSalt("fakeSalt");
            newUser.setLogin(loginEdit.getText());
            newUser.setName(nameEdit.getText());
            newUser.setSurname(surnameEdit.getText());
            newUser.setJobsCollection(new ArrayList<Jobs>());
            em.persist(newUser);
            for (Jobs j : jobs) {
                j = em.merge(j);
                newUser.getJobsCollection().add(j);  //look into CascadeType.PERSIST instead of managing both sides
                j.getUsersCollection().add(newUser);
            }
            tx.commit();
        } catch (Exception e) {
            if (tx != null && tx.isActive()){ tx.rollback();}
        } finally {
            em.close();
            nameEdit.setText("");
            surnameEdit.setText("");
            loginEdit.setText("");
            jobsSelector1.reset();
            refreshTable();
        }
    }//GEN-LAST:event_submitFormMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        refreshTable();
        jobsSelector1.reset();
    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private app.JobsSelector jobsSelector1;
    private javax.swing.JTextField loginEdit;
    private javax.swing.JTextField nameEdit;
    private javax.swing.JButton submitForm;
    private javax.swing.JTextField surnameEdit;
    private javax.swing.JPanel userDetails;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
    
    private void showError(String title, String text) {
        JOptionPane.showMessageDialog(null, text, title, JOptionPane.ERROR_MESSAGE);
    }
    
    
    private void refreshTable() {
        EntityManager em = factory.createEntityManager();
        CriteriaQuery<Users> cq = em.getCriteriaBuilder().createQuery(Users.class);
        cq.select(cq.from(Users.class));
        loadedUsers = em.createQuery(cq).getResultList();
        DefaultTableModel m = new UsersTableModel();
        for (Users user : loadedUsers) {
            String[] cd = new String[4];
            cd[0] = user.getLogin();
            cd[1] = user.getName();
            cd[2] = user.getSurname();
            StringBuilder jS = new StringBuilder();
            for (Jobs j : user.getJobsCollection()) {
                if (jS.length() > 0) {
                    jS.append(", ");
                }
                jS.append(j.getName());
            }
            cd[3] = jS.toString();
            m.addRow(cd);
        }
        usersTable.setModel(m);
        em.close();
    }
    
    class UsersTableModel extends DefaultTableModel {
        public UsersTableModel() {
            super();
            addColumn("Login");
            addColumn("Name");
            addColumn("Surname");
            addColumn("Positions");
        }
        
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    }
}
