/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import app.entities.Jobs;
import app.entities.Users;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JB
 */
public final class TablePanel extends javax.swing.JPanel {
    private EntityManagerFactory factory;
    private List<Users> loadedUsers;
    
    
    /**
     * Creates new form TablePanel
     */
    public TablePanel() {
        initComponents();
        
    }
    
    
    /**
     * Need this because constructor can't have any arguments.
     * @param factory 
     */
    public void initialize(EntityManagerFactory factory) {
        this.factory = factory;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        addUserButton = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "login", "name", "surname", "positions"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usersTable);

        addUserButton.setText("Add new user");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(addUserButton)
                .addGap(0, 797, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(addUserButton)
                .addGap(0, 145, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        refreshTable();
    }//GEN-LAST:event_formComponentShown

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        UserDialog dlg = new UserDialog(null, true, factory, loadedUsers.get(usersTable.getSelectedRow()));
        dlg.setVisible(true);
        if (dlg.isDbChanged()) {
            refreshTable();
        }
    }//GEN-LAST:event_usersTableMouseClicked

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        UserDialog dlg = new UserDialog(null, true, factory, null);
        dlg.setVisible(true);
        if (dlg.isDbChanged()) {
            refreshTable();
        }
    }//GEN-LAST:event_addUserButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
    
    
    private void refreshTable() {
        EntityManager em = factory.createEntityManager();
        CriteriaQuery<Users> cq = em.getCriteriaBuilder().createQuery(Users.class);
        cq.select(cq.from(Users.class));
        loadedUsers = em.createQuery(cq).getResultList();
        DefaultTableModel m = new UsersTableModel();
        for (Users user : loadedUsers) {
            String[] cd = new String[4];
            cd[0] = user.getLogin();
            cd[1] = user.getName();
            cd[2] = user.getSurname();
            StringBuilder jS = new StringBuilder();
            for (Jobs j : user.getJobsCollection()) {
                if (jS.length() > 0) {
                    jS.append(", ");
                }
                jS.append(j.getName());
            }
            cd[3] = jS.toString();
            m.addRow(cd);
        }
        usersTable.setModel(m);
        em.close();
    }
     
    class UsersTableModel extends DefaultTableModel {
        public UsersTableModel() {
            super();
            addColumn("Login");
            addColumn("Name");
            addColumn("Surname");
            addColumn("Positions");
        }
        
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    }
}
